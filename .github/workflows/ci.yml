name: CI

on:
  push:
  pull_request:

env:
  POSTGRES_HOST: localhost
  POSTGRES_PORT: 5432
  POSTGRES_DB: ccems-test
  POSTGRES_USER: postgres
  POSTGRES_PASSWORD: zJc2B%SDoUz%Uvrr

jobs:
  lint:
    name: lint
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v2
      - name: Set up Python
        uses: actions/setup-python@v3
      - run: python -m pip install --upgrade pip wheel
      - run: pip install pylint
      - run: pylint ./app

  unit-test:
    name: Unit Tests
    runs-on: ubuntu-latest
    services:
      postgres:
        image: postgres:latest
        env:
          POSTGRES_PASSWORD: ${{ env.POSTGRES_PASSWORD }}
          POSTGRES_DB: ${{ env.POSTGRES_DB }}
    steps:
      - name: Checkout code
        uses: actions/checkout@v2
      - name: Set up Python
        uses: actions/setup-python@v3
        with:
          python-version: 3.10.12
      - name: Install dependencies
        run: |
          pip install -r requirements.txt
        working-directory: ./
      - name: Run unit tests with code coverage
        run: |
          export $(xargs <ci.env)
          export DATABASE_URL_TEST="postgresql://${{ env.POSTGRES_USER }}:${{ env.POSTGRES_PASSWORD }}@${{ env.POSTGRES_HOST }}:${{ env.POSTGRES_PORT }}/${{ env.POSTGRES_DB }}"
          echo $DATABASE_URL_TEST
          coverage run -m unittest discover -s tests
          coverage report -m --fail-under=90
        working-directory: ./

  integration-test:
    name: Behave Tests
    runs-on: ubuntu-latest
    services:
      postgres:
        image: postgres:latest
        env:
          POSTGRES_PASSWORD: ${{ env.POSTGRES_PASSWORD }}
          POSTGRES_DB: ${{ env.POSTGRES_DB }}
    steps:
      - name: Checkout code
        uses: actions/checkout@v2
      - name: Set up Python
        uses: actions/setup-python@v3
        with:
          python-version: 3.10.12
      - name: Install dependencies
        run: |
          pip install -r requirements.txt
        working-directory: ./
      - name: Run behave tests
        run: |
          export $(xargs <ci.env)
          export FLASK_ENV=test
          export DATABASE_URL_TEST="postgresql://${{ env.POSTGRES_USER }}:${{ env.POSTGRES_PASSWORD }}@${{ env.POSTGRES_HOST }}:${{ env.POSTGRES_PORT }}/${{ env.POSTGRES_DB }}"
          echo $DATABASE_URL_TEST
          behave
        working-directory: ./
